#!/bin/bash
# run-expr

usage()
{
    echo "usage: run-expr [-f] [-n num] [-c count] [-d results-dir] [-F fitness-type] <experiment-name> <target-index> <lobotomise>" >&2;
}


force=0;
count=1;
num=1;
resultsDir=".";
fitnessType=0;
while getopts hfc:n:d:F: opt; do
	case $opt in
	    f) force=1;;
        h) usage;;
        d) resultsDir="$OPTARG";;
        n) num=$OPTARG;;
	    c) count=$OPTARG;;
        F) fitnessType=$OPTARG;;
	    *) echo "error: invalid option given." >&2; usage;;
	esac
done
shift $[ OPTIND - 1 ]

if [ $# -ne 3 ]; then
    usage;
    exit 2;
fi

expName="$1";
targetIndex="$2";
lobotomise="$3";
for ((i = $num; i < ($num + $count); i++)); do 
    dir="$resultsDir/$expName-t$targetIndex-l$lobotomise/r$i";
    mkdir -p "$dir";

    # Add a check to not overwrite currently existing results?
    outfile="$dir/output.txt";
    if [ "$force" -eq 1 ] && [ -f "$outfile"  ]; then
        echo "warning: '$outfile' already exists; skipping." >&2;
    else
        if ! alps_main "$expName" "$targetIndex" "$lobotomise" "$dir/pop-phase" "$fitnessType" | tee "$outfile"; then
            echo "error: alps_main failed with exit code ${PIPESTATUS}" >&2;
            exit 1;
        fi
    fi
done
